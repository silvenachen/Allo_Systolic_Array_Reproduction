// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="systolic_modulate_systolic_modulate,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.536000,HLS_SYN_LAT=1724,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=5376,HLS_SYN_LUT=6332,HLS_VERSION=2023_2}" *)

module systolic_modulate (
        v217_address0,
        v217_ce0,
        v217_d0,
        v217_q0,
        v217_we0,
        v217_address1,
        v217_ce1,
        v217_d1,
        v217_q1,
        v217_we1,
        v218_address0,
        v218_ce0,
        v218_d0,
        v218_q0,
        v218_we0,
        v218_address1,
        v218_ce1,
        v218_d1,
        v218_q1,
        v218_we1,
        v219_address0,
        v219_ce0,
        v219_d0,
        v219_q0,
        v219_we0,
        v219_address1,
        v219_ce1,
        v219_d1,
        v219_q1,
        v219_we1,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle
);


output  [2:0] v217_address0;
output   v217_ce0;
output  [31:0] v217_d0;
input  [31:0] v217_q0;
output   v217_we0;
output  [2:0] v217_address1;
output   v217_ce1;
output  [31:0] v217_d1;
input  [31:0] v217_q1;
output   v217_we1;
output  [10:0] v218_address0;
output   v218_ce0;
output  [31:0] v218_d0;
input  [31:0] v218_q0;
output   v218_we0;
output  [10:0] v218_address1;
output   v218_ce1;
output  [31:0] v218_d1;
input  [31:0] v218_q1;
output   v218_we1;
output  [7:0] v219_address0;
output   v219_ce0;
output  [31:0] v219_d0;
input  [31:0] v219_q0;
output   v219_we0;
output  [7:0] v219_address1;
output   v219_ce1;
output  [31:0] v219_d1;
input  [31:0] v219_q1;
output   v219_we1;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;

reg ap_done;
reg ap_ready;
reg ap_idle;

wire   [7:0] dataflow_in_loop_l_ni_1_U0_v219_address0;
wire    dataflow_in_loop_l_ni_1_U0_v219_ce0;
wire   [31:0] dataflow_in_loop_l_ni_1_U0_v219_d0;
wire    dataflow_in_loop_l_ni_1_U0_v219_we0;
wire   [7:0] dataflow_in_loop_l_ni_1_U0_v219_address1;
wire    dataflow_in_loop_l_ni_1_U0_v219_ce1;
wire   [31:0] dataflow_in_loop_l_ni_1_U0_v219_d1;
wire    dataflow_in_loop_l_ni_1_U0_v219_we1;
wire   [10:0] dataflow_in_loop_l_ni_1_U0_v218_address0;
wire    dataflow_in_loop_l_ni_1_U0_v218_ce0;
wire   [31:0] dataflow_in_loop_l_ni_1_U0_v218_d0;
wire    dataflow_in_loop_l_ni_1_U0_v218_we0;
wire   [10:0] dataflow_in_loop_l_ni_1_U0_v218_address1;
wire    dataflow_in_loop_l_ni_1_U0_v218_ce1;
wire   [31:0] dataflow_in_loop_l_ni_1_U0_v218_d1;
wire    dataflow_in_loop_l_ni_1_U0_v218_we1;
wire   [2:0] dataflow_in_loop_l_ni_1_U0_v217_address0;
wire    dataflow_in_loop_l_ni_1_U0_v217_ce0;
wire   [31:0] dataflow_in_loop_l_ni_1_U0_v217_d0;
wire    dataflow_in_loop_l_ni_1_U0_v217_we0;
wire   [2:0] dataflow_in_loop_l_ni_1_U0_v217_address1;
wire    dataflow_in_loop_l_ni_1_U0_v217_ce1;
wire   [31:0] dataflow_in_loop_l_ni_1_U0_v217_d1;
wire    dataflow_in_loop_l_ni_1_U0_v217_we1;
wire    dataflow_in_loop_l_ni_1_U0_ap_start;
wire    dataflow_in_loop_l_ni_1_U0_ap_done;
wire    dataflow_in_loop_l_ni_1_U0_ap_ready;
wire    dataflow_in_loop_l_ni_1_U0_ap_idle;
wire    dataflow_in_loop_l_ni_1_U0_ap_continue;
reg   [4:0] loop_dataflow_input_count;
reg   [4:0] loop_dataflow_output_count;
wire   [4:0] bound_minus_1;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 loop_dataflow_input_count = 5'd0;
#0 loop_dataflow_output_count = 5'd0;
end

systolic_modulate_dataflow_in_loop_l_ni_1 dataflow_in_loop_l_ni_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .indvars_iv26(loop_dataflow_input_count),
    .v219_address0(dataflow_in_loop_l_ni_1_U0_v219_address0),
    .v219_ce0(dataflow_in_loop_l_ni_1_U0_v219_ce0),
    .v219_d0(dataflow_in_loop_l_ni_1_U0_v219_d0),
    .v219_q0(32'd0),
    .v219_we0(dataflow_in_loop_l_ni_1_U0_v219_we0),
    .v219_address1(dataflow_in_loop_l_ni_1_U0_v219_address1),
    .v219_ce1(dataflow_in_loop_l_ni_1_U0_v219_ce1),
    .v219_d1(dataflow_in_loop_l_ni_1_U0_v219_d1),
    .v219_q1(32'd0),
    .v219_we1(dataflow_in_loop_l_ni_1_U0_v219_we1),
    .v218_address0(dataflow_in_loop_l_ni_1_U0_v218_address0),
    .v218_ce0(dataflow_in_loop_l_ni_1_U0_v218_ce0),
    .v218_d0(dataflow_in_loop_l_ni_1_U0_v218_d0),
    .v218_q0(v218_q0),
    .v218_we0(dataflow_in_loop_l_ni_1_U0_v218_we0),
    .v218_address1(dataflow_in_loop_l_ni_1_U0_v218_address1),
    .v218_ce1(dataflow_in_loop_l_ni_1_U0_v218_ce1),
    .v218_d1(dataflow_in_loop_l_ni_1_U0_v218_d1),
    .v218_q1(32'd0),
    .v218_we1(dataflow_in_loop_l_ni_1_U0_v218_we1),
    .v217_address0(dataflow_in_loop_l_ni_1_U0_v217_address0),
    .v217_ce0(dataflow_in_loop_l_ni_1_U0_v217_ce0),
    .v217_d0(dataflow_in_loop_l_ni_1_U0_v217_d0),
    .v217_q0(v217_q0),
    .v217_we0(dataflow_in_loop_l_ni_1_U0_v217_we0),
    .v217_address1(dataflow_in_loop_l_ni_1_U0_v217_address1),
    .v217_ce1(dataflow_in_loop_l_ni_1_U0_v217_ce1),
    .v217_d1(dataflow_in_loop_l_ni_1_U0_v217_d1),
    .v217_q1(32'd0),
    .v217_we1(dataflow_in_loop_l_ni_1_U0_v217_we1),
    .indvars_iv26_ap_vld(1'b0),
    .ap_start(dataflow_in_loop_l_ni_1_U0_ap_start),
    .ap_done(dataflow_in_loop_l_ni_1_U0_ap_done),
    .ap_ready(dataflow_in_loop_l_ni_1_U0_ap_ready),
    .ap_idle(dataflow_in_loop_l_ni_1_U0_ap_idle),
    .ap_continue(dataflow_in_loop_l_ni_1_U0_ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        loop_dataflow_input_count <= 5'd0;
    end else begin
        if ((~(loop_dataflow_input_count == bound_minus_1) & (ap_start == 1'b1) & (dataflow_in_loop_l_ni_1_U0_ap_ready == 1'b1))) begin
            loop_dataflow_input_count <= (loop_dataflow_input_count + 5'd1);
        end else if (((loop_dataflow_input_count == bound_minus_1) & (ap_start == 1'b1) & (dataflow_in_loop_l_ni_1_U0_ap_ready == 1'b1))) begin
            loop_dataflow_input_count <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        loop_dataflow_output_count <= 5'd0;
    end else begin
        if ((~(loop_dataflow_output_count == bound_minus_1) & (dataflow_in_loop_l_ni_1_U0_ap_continue == 1'b1) & (dataflow_in_loop_l_ni_1_U0_ap_done == 1'b1))) begin
            loop_dataflow_output_count <= (loop_dataflow_output_count + 5'd1);
        end else if (((loop_dataflow_output_count == bound_minus_1) & (dataflow_in_loop_l_ni_1_U0_ap_continue == 1'b1) & (dataflow_in_loop_l_ni_1_U0_ap_done == 1'b1))) begin
            loop_dataflow_output_count <= 5'd0;
        end
    end
end

always @ (*) begin
    if (((loop_dataflow_output_count == bound_minus_1) & (dataflow_in_loop_l_ni_1_U0_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((loop_dataflow_output_count == 5'd0) & (ap_start == 1'b0) & (dataflow_in_loop_l_ni_1_U0_ap_idle == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((loop_dataflow_input_count == bound_minus_1) & (ap_start == 1'b1) & (dataflow_in_loop_l_ni_1_U0_ap_ready == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

assign bound_minus_1 = (5'd24 - 5'd1);

assign dataflow_in_loop_l_ni_1_U0_ap_start = ap_start;

assign v217_address0 = dataflow_in_loop_l_ni_1_U0_v217_address0;

assign v217_address1 = 3'd0;

assign v217_ce0 = dataflow_in_loop_l_ni_1_U0_v217_ce0;

assign v217_ce1 = 1'b0;

assign v217_d0 = 32'd0;

assign v217_d1 = 32'd0;

assign v217_we0 = 1'b0;

assign v217_we1 = 1'b0;

assign v218_address0 = dataflow_in_loop_l_ni_1_U0_v218_address0;

assign v218_address1 = 11'd0;

assign v218_ce0 = dataflow_in_loop_l_ni_1_U0_v218_ce0;

assign v218_ce1 = 1'b0;

assign v218_d0 = 32'd0;

assign v218_d1 = 32'd0;

assign v218_we0 = 1'b0;

assign v218_we1 = 1'b0;

assign v219_address0 = dataflow_in_loop_l_ni_1_U0_v219_address0;

assign v219_address1 = 8'd0;

assign v219_ce0 = dataflow_in_loop_l_ni_1_U0_v219_ce0;

assign v219_ce1 = 1'b0;

assign v219_d0 = dataflow_in_loop_l_ni_1_U0_v219_d0;

assign v219_d1 = 32'd0;

assign v219_we0 = dataflow_in_loop_l_ni_1_U0_v219_we0;

assign v219_we1 = 1'b0;

assign dataflow_in_loop_l_ni_1_U0_ap_continue = 1'b1;

endmodule //systolic_modulate
