-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity systolic_modulate_systolic_tile_modulate_Loop_l_data_drain_k9_proc22 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    A_fifo_8_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    A_fifo_8_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    A_fifo_8_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    A_fifo_8_empty_n : IN STD_LOGIC;
    A_fifo_8_read : OUT STD_LOGIC;
    B_fifo_13_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    B_fifo_13_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    B_fifo_13_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    B_fifo_13_empty_n : IN STD_LOGIC;
    B_fifo_13_read : OUT STD_LOGIC;
    B_fifo_11_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    B_fifo_11_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    B_fifo_11_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    B_fifo_11_empty_n : IN STD_LOGIC;
    B_fifo_11_read : OUT STD_LOGIC;
    B_fifo_9_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    B_fifo_9_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    B_fifo_9_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    B_fifo_9_empty_n : IN STD_LOGIC;
    B_fifo_9_read : OUT STD_LOGIC;
    B_fifo_7_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    B_fifo_7_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    B_fifo_7_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    B_fifo_7_empty_n : IN STD_LOGIC;
    B_fifo_7_read : OUT STD_LOGIC;
    B_fifo_5_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    B_fifo_5_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    B_fifo_5_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    B_fifo_5_empty_n : IN STD_LOGIC;
    B_fifo_5_read : OUT STD_LOGIC;
    B_fifo_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    B_fifo_3_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    B_fifo_3_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    B_fifo_3_empty_n : IN STD_LOGIC;
    B_fifo_3_read : OUT STD_LOGIC;
    B_fifo_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    B_fifo_1_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    B_fifo_1_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    B_fifo_1_empty_n : IN STD_LOGIC;
    B_fifo_1_read : OUT STD_LOGIC;
    B_fifo_15_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    B_fifo_15_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    B_fifo_15_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    B_fifo_15_empty_n : IN STD_LOGIC;
    B_fifo_15_read : OUT STD_LOGIC );
end;


architecture behav of systolic_modulate_systolic_tile_modulate_Loop_l_data_drain_k9_proc22 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal or_ln628_reg_231 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln633_reg_235 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln628_fu_158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal A_fifo_8_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal B_fifo_1_blk_n : STD_LOGIC;
    signal B_fifo_3_blk_n : STD_LOGIC;
    signal B_fifo_5_blk_n : STD_LOGIC;
    signal B_fifo_7_blk_n : STD_LOGIC;
    signal B_fifo_9_blk_n : STD_LOGIC;
    signal B_fifo_11_blk_n : STD_LOGIC;
    signal B_fifo_13_blk_n : STD_LOGIC;
    signal B_fifo_15_blk_n : STD_LOGIC;
    signal icmp_ln628_reg_227 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal or_ln628_fu_179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln633_fu_193_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_first_iter_0_phi_fu_137_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal n1_fu_72 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal add_ln633_fu_197_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_allocacmp_n1_load : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten_fu_76 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal add_ln628_fu_164_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln633_fu_173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln628_fu_185_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_293 : BOOLEAN;
    signal ap_condition_202 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component systolic_modulate_flow_control_loop_pipe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_U : component systolic_modulate_flow_control_loop_pipe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int,
        ap_continue => ap_continue);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_fu_76_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_202)) then
                if ((icmp_ln628_fu_158_p2 = ap_const_lv1_0)) then 
                    indvar_flatten_fu_76 <= add_ln628_fu_164_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_76 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;

    n1_fu_72_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_202)) then
                if ((icmp_ln628_fu_158_p2 = ap_const_lv1_0)) then 
                    n1_fu_72 <= add_ln633_fu_197_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    n1_fu_72 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln628_reg_227 <= icmp_ln628_fu_158_p2;
                or_ln628_reg_231 <= or_ln628_fu_179_p2;
                trunc_ln633_reg_235 <= trunc_ln633_fu_193_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;

    A_fifo_8_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, A_fifo_8_empty_n, or_ln628_reg_231, ap_block_pp0_stage0)
    begin
        if (((or_ln628_reg_231 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            A_fifo_8_blk_n <= A_fifo_8_empty_n;
        else 
            A_fifo_8_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    A_fifo_8_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, or_ln628_reg_231, ap_block_pp0_stage0_11001)
    begin
        if (((or_ln628_reg_231 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_fifo_8_read <= ap_const_logic_1;
        else 
            A_fifo_8_read <= ap_const_logic_0;
        end if; 
    end process;


    B_fifo_11_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln633_reg_235, B_fifo_11_empty_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln633_reg_235 = ap_const_lv3_5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            B_fifo_11_blk_n <= B_fifo_11_empty_n;
        else 
            B_fifo_11_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_fifo_11_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln633_reg_235, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln633_reg_235 = ap_const_lv3_5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_fifo_11_read <= ap_const_logic_1;
        else 
            B_fifo_11_read <= ap_const_logic_0;
        end if; 
    end process;


    B_fifo_13_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, B_fifo_13_empty_n, trunc_ln633_reg_235, ap_block_pp0_stage0)
    begin
        if (((trunc_ln633_reg_235 = ap_const_lv3_6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            B_fifo_13_blk_n <= B_fifo_13_empty_n;
        else 
            B_fifo_13_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_fifo_13_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln633_reg_235, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln633_reg_235 = ap_const_lv3_6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_fifo_13_read <= ap_const_logic_1;
        else 
            B_fifo_13_read <= ap_const_logic_0;
        end if; 
    end process;


    B_fifo_15_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln633_reg_235, B_fifo_15_empty_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln633_reg_235 = ap_const_lv3_7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            B_fifo_15_blk_n <= B_fifo_15_empty_n;
        else 
            B_fifo_15_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_fifo_15_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln633_reg_235, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln633_reg_235 = ap_const_lv3_7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_fifo_15_read <= ap_const_logic_1;
        else 
            B_fifo_15_read <= ap_const_logic_0;
        end if; 
    end process;


    B_fifo_1_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln633_reg_235, B_fifo_1_empty_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln633_reg_235 = ap_const_lv3_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            B_fifo_1_blk_n <= B_fifo_1_empty_n;
        else 
            B_fifo_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_fifo_1_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln633_reg_235, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln633_reg_235 = ap_const_lv3_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_fifo_1_read <= ap_const_logic_1;
        else 
            B_fifo_1_read <= ap_const_logic_0;
        end if; 
    end process;


    B_fifo_3_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln633_reg_235, B_fifo_3_empty_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln633_reg_235 = ap_const_lv3_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            B_fifo_3_blk_n <= B_fifo_3_empty_n;
        else 
            B_fifo_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_fifo_3_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln633_reg_235, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln633_reg_235 = ap_const_lv3_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_fifo_3_read <= ap_const_logic_1;
        else 
            B_fifo_3_read <= ap_const_logic_0;
        end if; 
    end process;


    B_fifo_5_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln633_reg_235, B_fifo_5_empty_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln633_reg_235 = ap_const_lv3_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            B_fifo_5_blk_n <= B_fifo_5_empty_n;
        else 
            B_fifo_5_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_fifo_5_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln633_reg_235, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln633_reg_235 = ap_const_lv3_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_fifo_5_read <= ap_const_logic_1;
        else 
            B_fifo_5_read <= ap_const_logic_0;
        end if; 
    end process;


    B_fifo_7_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln633_reg_235, B_fifo_7_empty_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln633_reg_235 = ap_const_lv3_3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            B_fifo_7_blk_n <= B_fifo_7_empty_n;
        else 
            B_fifo_7_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_fifo_7_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln633_reg_235, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln633_reg_235 = ap_const_lv3_3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_fifo_7_read <= ap_const_logic_1;
        else 
            B_fifo_7_read <= ap_const_logic_0;
        end if; 
    end process;


    B_fifo_9_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln633_reg_235, B_fifo_9_empty_n, ap_block_pp0_stage0)
    begin
        if (((trunc_ln633_reg_235 = ap_const_lv3_4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            B_fifo_9_blk_n <= B_fifo_9_empty_n;
        else 
            B_fifo_9_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_fifo_9_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln633_reg_235, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln633_reg_235 = ap_const_lv3_4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_fifo_9_read <= ap_const_logic_1;
        else 
            B_fifo_9_read <= ap_const_logic_0;
        end if; 
    end process;

    add_ln628_fu_164_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv7_1));
    add_ln633_fu_197_p2 <= std_logic_vector(unsigned(select_ln628_fu_185_p3) + unsigned(ap_const_lv4_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_block_state2_pp0_stage0_iter1, ap_start_int)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_block_state2_pp0_stage0_iter1, ap_start_int)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_done_reg = ap_const_logic_1);
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(A_fifo_8_empty_n, or_ln628_reg_231, B_fifo_13_empty_n, trunc_ln633_reg_235, B_fifo_11_empty_n, B_fifo_9_empty_n, B_fifo_7_empty_n, B_fifo_5_empty_n, B_fifo_3_empty_n, B_fifo_1_empty_n, B_fifo_15_empty_n)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((trunc_ln633_reg_235 = ap_const_lv3_3) and (ap_const_logic_0 = B_fifo_7_empty_n)) or ((trunc_ln633_reg_235 = ap_const_lv3_4) and (ap_const_logic_0 = B_fifo_9_empty_n)) or ((trunc_ln633_reg_235 = ap_const_lv3_5) and (ap_const_logic_0 = B_fifo_11_empty_n)) or ((trunc_ln633_reg_235 = ap_const_lv3_6) and (ap_const_logic_0 = B_fifo_13_empty_n)) or ((or_ln628_reg_231 = ap_const_lv1_1) and (ap_const_logic_0 = A_fifo_8_empty_n)) or ((trunc_ln633_reg_235 = ap_const_lv3_7) and (ap_const_logic_0 = B_fifo_15_empty_n)) or ((trunc_ln633_reg_235 = ap_const_lv3_0) and (ap_const_logic_0 = B_fifo_1_empty_n)) or ((trunc_ln633_reg_235 = ap_const_lv3_1) and (ap_const_logic_0 = B_fifo_3_empty_n)) or ((trunc_ln633_reg_235 = ap_const_lv3_2) and (ap_const_logic_0 = B_fifo_5_empty_n)));
    end process;


    ap_condition_202_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
                ap_condition_202 <= ((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_293_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln628_reg_227)
    begin
                ap_condition_293 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln628_reg_227 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, icmp_ln628_fu_158_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln628_fu_158_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_done_reg, ap_block_pp0_stage0_subdone, ap_loop_exit_ready)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_first_iter_0_phi_fu_137_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_loop_init, ap_condition_293)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
            if ((ap_const_boolean_1 = ap_condition_293)) then 
                ap_phi_mux_first_iter_0_phi_fu_137_p4 <= ap_const_lv1_0;
            elsif ((ap_loop_init = ap_const_logic_1)) then 
                ap_phi_mux_first_iter_0_phi_fu_137_p4 <= ap_const_lv1_1;
            else 
                ap_phi_mux_first_iter_0_phi_fu_137_p4 <= ap_const_lv1_0;
            end if;
        else 
            ap_phi_mux_first_iter_0_phi_fu_137_p4 <= ap_const_lv1_0;
        end if; 
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_76, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_76;
        end if; 
    end process;


    ap_sig_allocacmp_n1_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, n1_fu_72, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_n1_load <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_n1_load <= n1_fu_72;
        end if; 
    end process;

    icmp_ln628_fu_158_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv7_40) else "0";
    icmp_ln633_fu_173_p2 <= "1" when (ap_sig_allocacmp_n1_load = ap_const_lv4_8) else "0";
    or_ln628_fu_179_p2 <= (icmp_ln633_fu_173_p2 or ap_phi_mux_first_iter_0_phi_fu_137_p4);
    select_ln628_fu_185_p3 <= 
        ap_const_lv4_0 when (icmp_ln633_fu_173_p2(0) = '1') else 
        ap_sig_allocacmp_n1_load;
    trunc_ln633_fu_193_p1 <= select_ln628_fu_185_p3(3 - 1 downto 0);
end behav;
