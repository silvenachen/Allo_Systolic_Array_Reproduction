-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity systolic_modulate is
port (
    v217_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    v217_ce0 : OUT STD_LOGIC;
    v217_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    v217_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v217_we0 : OUT STD_LOGIC;
    v217_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    v217_ce1 : OUT STD_LOGIC;
    v217_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    v217_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    v217_we1 : OUT STD_LOGIC;
    v218_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    v218_ce0 : OUT STD_LOGIC;
    v218_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    v218_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v218_we0 : OUT STD_LOGIC;
    v218_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    v218_ce1 : OUT STD_LOGIC;
    v218_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    v218_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    v218_we1 : OUT STD_LOGIC;
    v219_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v219_ce0 : OUT STD_LOGIC;
    v219_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    v219_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v219_we0 : OUT STD_LOGIC;
    v219_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v219_ce1 : OUT STD_LOGIC;
    v219_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    v219_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    v219_we1 : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of systolic_modulate is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "systolic_modulate_systolic_modulate,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.536000,HLS_SYN_LAT=1724,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=5376,HLS_SYN_LUT=6332,HLS_VERSION=2023_2}";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";

    signal dataflow_in_loop_l_ni_1_U0_v219_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dataflow_in_loop_l_ni_1_U0_v219_ce0 : STD_LOGIC;
    signal dataflow_in_loop_l_ni_1_U0_v219_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_l_ni_1_U0_v219_we0 : STD_LOGIC;
    signal dataflow_in_loop_l_ni_1_U0_v219_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal dataflow_in_loop_l_ni_1_U0_v219_ce1 : STD_LOGIC;
    signal dataflow_in_loop_l_ni_1_U0_v219_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_l_ni_1_U0_v219_we1 : STD_LOGIC;
    signal dataflow_in_loop_l_ni_1_U0_v218_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal dataflow_in_loop_l_ni_1_U0_v218_ce0 : STD_LOGIC;
    signal dataflow_in_loop_l_ni_1_U0_v218_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_l_ni_1_U0_v218_we0 : STD_LOGIC;
    signal dataflow_in_loop_l_ni_1_U0_v218_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal dataflow_in_loop_l_ni_1_U0_v218_ce1 : STD_LOGIC;
    signal dataflow_in_loop_l_ni_1_U0_v218_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_l_ni_1_U0_v218_we1 : STD_LOGIC;
    signal dataflow_in_loop_l_ni_1_U0_v217_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_l_ni_1_U0_v217_ce0 : STD_LOGIC;
    signal dataflow_in_loop_l_ni_1_U0_v217_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_l_ni_1_U0_v217_we0 : STD_LOGIC;
    signal dataflow_in_loop_l_ni_1_U0_v217_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_l_ni_1_U0_v217_ce1 : STD_LOGIC;
    signal dataflow_in_loop_l_ni_1_U0_v217_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_l_ni_1_U0_v217_we1 : STD_LOGIC;
    signal dataflow_in_loop_l_ni_1_U0_ap_start : STD_LOGIC;
    signal dataflow_in_loop_l_ni_1_U0_ap_done : STD_LOGIC;
    signal dataflow_in_loop_l_ni_1_U0_ap_ready : STD_LOGIC;
    signal dataflow_in_loop_l_ni_1_U0_ap_idle : STD_LOGIC;
    signal dataflow_in_loop_l_ni_1_U0_ap_continue : STD_LOGIC;
    signal loop_dataflow_input_count : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal loop_dataflow_output_count : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal bound_minus_1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component systolic_modulate_dataflow_in_loop_l_ni_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        indvars_iv26 : IN STD_LOGIC_VECTOR (4 downto 0);
        v219_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v219_ce0 : OUT STD_LOGIC;
        v219_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v219_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v219_we0 : OUT STD_LOGIC;
        v219_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v219_ce1 : OUT STD_LOGIC;
        v219_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v219_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        v219_we1 : OUT STD_LOGIC;
        v218_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v218_ce0 : OUT STD_LOGIC;
        v218_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v218_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v218_we0 : OUT STD_LOGIC;
        v218_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v218_ce1 : OUT STD_LOGIC;
        v218_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v218_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        v218_we1 : OUT STD_LOGIC;
        v217_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        v217_ce0 : OUT STD_LOGIC;
        v217_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v217_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v217_we0 : OUT STD_LOGIC;
        v217_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        v217_ce1 : OUT STD_LOGIC;
        v217_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v217_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        v217_we1 : OUT STD_LOGIC;
        indvars_iv26_ap_vld : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    dataflow_in_loop_l_ni_1_U0 : component systolic_modulate_dataflow_in_loop_l_ni_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        indvars_iv26 => loop_dataflow_input_count,
        v219_address0 => dataflow_in_loop_l_ni_1_U0_v219_address0,
        v219_ce0 => dataflow_in_loop_l_ni_1_U0_v219_ce0,
        v219_d0 => dataflow_in_loop_l_ni_1_U0_v219_d0,
        v219_q0 => ap_const_lv32_0,
        v219_we0 => dataflow_in_loop_l_ni_1_U0_v219_we0,
        v219_address1 => dataflow_in_loop_l_ni_1_U0_v219_address1,
        v219_ce1 => dataflow_in_loop_l_ni_1_U0_v219_ce1,
        v219_d1 => dataflow_in_loop_l_ni_1_U0_v219_d1,
        v219_q1 => ap_const_lv32_0,
        v219_we1 => dataflow_in_loop_l_ni_1_U0_v219_we1,
        v218_address0 => dataflow_in_loop_l_ni_1_U0_v218_address0,
        v218_ce0 => dataflow_in_loop_l_ni_1_U0_v218_ce0,
        v218_d0 => dataflow_in_loop_l_ni_1_U0_v218_d0,
        v218_q0 => v218_q0,
        v218_we0 => dataflow_in_loop_l_ni_1_U0_v218_we0,
        v218_address1 => dataflow_in_loop_l_ni_1_U0_v218_address1,
        v218_ce1 => dataflow_in_loop_l_ni_1_U0_v218_ce1,
        v218_d1 => dataflow_in_loop_l_ni_1_U0_v218_d1,
        v218_q1 => ap_const_lv32_0,
        v218_we1 => dataflow_in_loop_l_ni_1_U0_v218_we1,
        v217_address0 => dataflow_in_loop_l_ni_1_U0_v217_address0,
        v217_ce0 => dataflow_in_loop_l_ni_1_U0_v217_ce0,
        v217_d0 => dataflow_in_loop_l_ni_1_U0_v217_d0,
        v217_q0 => v217_q0,
        v217_we0 => dataflow_in_loop_l_ni_1_U0_v217_we0,
        v217_address1 => dataflow_in_loop_l_ni_1_U0_v217_address1,
        v217_ce1 => dataflow_in_loop_l_ni_1_U0_v217_ce1,
        v217_d1 => dataflow_in_loop_l_ni_1_U0_v217_d1,
        v217_q1 => ap_const_lv32_0,
        v217_we1 => dataflow_in_loop_l_ni_1_U0_v217_we1,
        indvars_iv26_ap_vld => ap_const_logic_0,
        ap_start => dataflow_in_loop_l_ni_1_U0_ap_start,
        ap_done => dataflow_in_loop_l_ni_1_U0_ap_done,
        ap_ready => dataflow_in_loop_l_ni_1_U0_ap_ready,
        ap_idle => dataflow_in_loop_l_ni_1_U0_ap_idle,
        ap_continue => dataflow_in_loop_l_ni_1_U0_ap_continue);





    loop_dataflow_input_count_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                loop_dataflow_input_count <= ap_const_lv5_0;
            else
                if ((not((loop_dataflow_input_count = bound_minus_1)) and (ap_start = ap_const_logic_1) and (dataflow_in_loop_l_ni_1_U0_ap_ready = ap_const_logic_1))) then 
                    loop_dataflow_input_count <= std_logic_vector(unsigned(loop_dataflow_input_count) + unsigned(ap_const_lv5_1));
                elsif (((loop_dataflow_input_count = bound_minus_1) and (ap_start = ap_const_logic_1) and (dataflow_in_loop_l_ni_1_U0_ap_ready = ap_const_logic_1))) then 
                    loop_dataflow_input_count <= ap_const_lv5_0;
                end if; 
            end if;
        end if;
    end process;


    loop_dataflow_output_count_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                loop_dataflow_output_count <= ap_const_lv5_0;
            else
                if ((not((loop_dataflow_output_count = bound_minus_1)) and (dataflow_in_loop_l_ni_1_U0_ap_continue = ap_const_logic_1) and (dataflow_in_loop_l_ni_1_U0_ap_done = ap_const_logic_1))) then 
                    loop_dataflow_output_count <= std_logic_vector(unsigned(loop_dataflow_output_count) + unsigned(ap_const_lv5_1));
                elsif (((loop_dataflow_output_count = bound_minus_1) and (dataflow_in_loop_l_ni_1_U0_ap_continue = ap_const_logic_1) and (dataflow_in_loop_l_ni_1_U0_ap_done = ap_const_logic_1))) then 
                    loop_dataflow_output_count <= ap_const_lv5_0;
                end if; 
            end if;
        end if;
    end process;


    ap_done_assign_proc : process(dataflow_in_loop_l_ni_1_U0_ap_done, loop_dataflow_output_count, bound_minus_1)
    begin
        if (((loop_dataflow_output_count = bound_minus_1) and (dataflow_in_loop_l_ni_1_U0_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(dataflow_in_loop_l_ni_1_U0_ap_idle, ap_start, loop_dataflow_output_count)
    begin
        if (((loop_dataflow_output_count = ap_const_lv5_0) and (ap_start = ap_const_logic_0) and (dataflow_in_loop_l_ni_1_U0_ap_idle = ap_const_logic_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(dataflow_in_loop_l_ni_1_U0_ap_ready, ap_start, loop_dataflow_input_count, bound_minus_1)
    begin
        if (((loop_dataflow_input_count = bound_minus_1) and (ap_start = ap_const_logic_1) and (dataflow_in_loop_l_ni_1_U0_ap_ready = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bound_minus_1 <= std_logic_vector(unsigned(ap_const_lv5_18) - unsigned(ap_const_lv5_1));
    dataflow_in_loop_l_ni_1_U0_ap_continue <= ap_const_logic_1;
    dataflow_in_loop_l_ni_1_U0_ap_start <= ap_start;
    v217_address0 <= dataflow_in_loop_l_ni_1_U0_v217_address0;
    v217_address1 <= ap_const_lv3_0;
    v217_ce0 <= dataflow_in_loop_l_ni_1_U0_v217_ce0;
    v217_ce1 <= ap_const_logic_0;
    v217_d0 <= ap_const_lv32_0;
    v217_d1 <= ap_const_lv32_0;
    v217_we0 <= ap_const_logic_0;
    v217_we1 <= ap_const_logic_0;
    v218_address0 <= dataflow_in_loop_l_ni_1_U0_v218_address0;
    v218_address1 <= ap_const_lv11_0;
    v218_ce0 <= dataflow_in_loop_l_ni_1_U0_v218_ce0;
    v218_ce1 <= ap_const_logic_0;
    v218_d0 <= ap_const_lv32_0;
    v218_d1 <= ap_const_lv32_0;
    v218_we0 <= ap_const_logic_0;
    v218_we1 <= ap_const_logic_0;
    v219_address0 <= dataflow_in_loop_l_ni_1_U0_v219_address0;
    v219_address1 <= ap_const_lv8_0;
    v219_ce0 <= dataflow_in_loop_l_ni_1_U0_v219_ce0;
    v219_ce1 <= ap_const_logic_0;
    v219_d0 <= dataflow_in_loop_l_ni_1_U0_v219_d0;
    v219_d1 <= ap_const_lv32_0;
    v219_we0 <= dataflow_in_loop_l_ni_1_U0_v219_we0;
    v219_we1 <= ap_const_logic_0;
end behav;
